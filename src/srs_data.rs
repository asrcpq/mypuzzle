// block pos table
// each two lines are 4 groups, each group is a block in certaion direction
// each group has four pairs, each pair is a pos of a group
lazy_static::lazy_static! {

pub static ref ID_TO_CHAR: Vec<char> = vec![
	'i', 'j', 'l', 'o', 's', 't', 'z', ' ',
];

pub static ref BPT: Vec<i32> = vec![
	0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 1, 0, 2, 0, 3,
	0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 1, 0, 2, 0, 3,
	0, 0, 0, 1, 1, 1, 2, 1, 0, 0, 1, 0, 0, 1, 0, 2,
	0, 0, 1, 0, 2, 0, 2, 1, 1, 0, 1, 1, 1, 2, 0, 2,
	2, 0, 2, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 2, 1, 2,
	0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 2,
	0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1,
	0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1,
	1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 2,
	1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 2,
	1, 0, 0, 1, 1, 1, 2, 1, 0, 0, 0, 1, 0, 2, 1, 1,
	0, 0, 1, 0, 2, 0, 1, 1, 1, 0, 1, 1, 1, 2, 0, 1,
	0, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2,
	0, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2,
];

pub static ref BLOCK_HEIGHT: Vec<i32> = vec![
	1, 4, 1, 4,
	2, 3, 2, 3,
	2, 3, 2, 3,
	2, 2, 2, 2,
	2, 3, 2, 3,
	2, 3, 2, 3,
	2, 3, 2, 3,
];

pub static ref COLORMAP: Vec<u8> = vec![6, 4, 7, 3, 2, 5, 1, 0];

// standard rotation pos
// each line is for a type of block, 4 pairs of pos(left up) indicates 4 directions
// each pos is the difference to first pair
pub static ref SRP: Vec<i32> = vec![
	0, 0, 2, -1, 0, 1, 1, -1,
	0, 0, 1, 0, 0, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
];

// wall kick pos
// line 1-4: 0->1 to 3->0, 5 attempts
// line 5-8: 0->3 to 3->2
pub static ref WKD: Vec<i32> = vec![
	 0, 0, -1, 0, -1,-1, 0, 2, -1, 2,
	 0, 0,  1, 0,  1, 1, 0,-2,  1,-2,
	 0, 0,  1, 0,  1,-1, 0, 2,  1, 2,
	 0, 0, -1, 0, -1, 1, 0,-2, -1,-2,
	 0, 0,  1, 0,  1,-1, 0, 2,  1, 2,
	 0, 0,  1, 0,  1, 1, 0,-2,  1,-2,
	 0, 0, -1, 0, -1,-1, 0, 2, -1, 2,
	 0, 0, -1, 0, -1, 1, 0,-2, -1,-2,
];
// I block's WKD
pub static ref IWKD: Vec<i32> = vec![
	0, 0, -2, 0,  1, 0, -2, 1,  1,-2,
	0, 0, -1, 0,  2, 0, -1,-2,  2, 1,
	0, 0,  2, 0, -1, 0,  2,-1, -1, 2,
	0, 0,  1, 0, -2, 0,  1, 2, -2,-1,
	0, 0, -1, 0,  2, 0, -1,-2,  2, 1,
	0, 0,  2, 0, -1, 0,  2,-1, -1, 2,
	0, 0,  1, 0, -2, 0,  1, 2, -2,-1,
	0, 0, -2, 0,  1, 0, -2, 1,  1,-2,
];
// flip wall kick, tetr.io style
// 0->2 to 3->1
pub static ref FWKD: Vec<i32> = vec![
	0, 0, 0, 1, 1, 1, -1, 1, 1, 0, -1, 0,
	0, 0, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1,
	0, 0, 0, -1, -1, -1, 1, -1, -1, 0, 1, 0,
	0, 0, -1, 0, -1, 2, -1, 1, 0, 2, 0, 1,
];

}
